class JumadmissionGenerator < Rails::Generators::Base
  source_root File.expand_path('../templates', __FILE__)
  argument :application_name_in, :type => :string
  argument :view_name_in, :type => :string, :default => "application"
  
  @@gen_version = "1.0.0"

  def generate_jumadmission
    
    found = false
    Object::const_get(model_name).columns_hash.each do |att,value| 
      if (att == 'company_id' || att == 'user_id' || att == 'team_id')
        found = true
      end
    end
    if found
#      puts "#{blue('   identical  ')}company_id, team_id or user_id already in view - no migration"
    else
      generate "migration" " AddUserRefTo#{class_name} company:references team:references user:references"
      rake("db:migrate")
    end

    insert_into_file "app/models/#{row_name}.rb",
                     :after => "ActiveRecord::Base\n" do
      "  #{generator_label_rb} Start\n" +
      "  belongs_to :user\n" +
      "  belongs_to :company\n" +
      "  belongs_to :team\n\n" +
      "  validates  :user_id, presence: true\n" +
      "  validates  :company_id, presence: true\n" +
      "  validates  :team_id, presence: true\n\n" +
      "  def set_admission(right)\n" +
      "    self.user_id    = right.user_id\n" +
      "    self.company_id = right.company_id\n" +
      "    self.team_id    = right.team_id\n" +
      "    return self\n" +
      "  end\n" +
      "  # End of generator insertion\n"
    end

    insert_into_file "app/controllers/#{view_name}_controller.rb",
                     :after => "class #{class_name}Controller < ApplicationController\n" do
      "  before_filter :authenticate_user! # jumadmission generator\n" +
      "  after_action :verify_authorized, :except => :index # jumadmission generator\n" +
      "  after_action :verify_policy_scoped, :only => :index # jumadmission generator\n"
    end

    # controller index
    comment_lines "app/controllers/#{view_name}_controller.rb", "    @#{view_name} = #{model_name}.all"
    insert_into_file "app/controllers/#{view_name}_controller.rb",
                     :after => "  def index\n" do
      "    @#{view_name} = policy_scope(#{model_name}) # jumadmission generator index\n"
    end
    
    # controller show
    insert_into_file "app/controllers/#{view_name}_controller.rb",
                     :after => "  def show\n" do
      "    authorize @#{row_name} # jumadmission generator show\n"
    end
    
    # controller new
    insert_into_file "app/controllers/#{view_name}_controller.rb",
                     :after => "  def new\n    \@#{row_name} = #{model_name}.new\n" do
      "    authorize @#{row_name} # jumadmission generator new\n"
    end

    # controller edit
    insert_into_file "app/controllers/#{view_name}_controller.rb",
                     :after => "  def edit\n" do
      "    authorize @#{row_name} # jumadmission generator edit\n"
    end
    
    # controller create
    insert_into_file "app/controllers/#{view_name}_controller.rb",
                     :after => "  def create\n    \@#{row_name} = #{model_name}.new(#{row_name}_params)" do
      ".set_admission(current_right) # jumadmission generator: set_admission\n" +
      "    authorize @#{row_name} # jumadmission generator create\n"
    end
    
    # controller update
    insert_into_file "app/controllers/#{view_name}_controller.rb",
                     :after => "  def update\n" do
      "    authorize @#{row_name} # jumadmission generator update\n"
    end
    
     # controller destroy
    insert_into_file "app/controllers/#{view_name}_controller.rb",
                     :after => "  def destroy\n" do
      "    authorize @#{row_name} # jumadmission generator destroy\n"
    end

    template "model_policy.rb", "app/policies/#{row_name}_policy.rb" 

  end
 
  def generator_label
    # Datum führt zu "conflict" statt "identical" beim Generieren
    # "<%# Generated by jumindex_generator " + DateTime.now.to_s + " %>"
    "<%# Generated by jumaccount_generator " + @@gen_version + " %>"
  end

  def generator_label_js
    # Datum führt zu "conflict" statt "identical" beim Generieren
    # "<%# Generated by jumindex_generator " + DateTime.now.to_s + " %>"
    "// Generated by jumaccount_generator " + @@gen_version
  end
  def generator_label_rb
    # Datum führt zu "conflict" statt "identical" beim Generieren
    # "<%# Generated by jumindex_generator " + DateTime.now.to_s + " %>"
    "# Generated by jumaccount_generator " + @@gen_version
  end
  def application_name
    application_name_in.downcase
  end
  def db_name
    application_name_in.downcase
  end
  def git_repo_name
    application_name_in.downcase
  end
  
  def view_name
    @view_name ||= begin
    view_name_in.pluralize.underscore
    end
  end

  def row_name
    view_name.singularize.underscore
  end

  def model_name
    view_name.singularize.camelize
  end

  def class_name
    view_name.camelize
  end

  private
  def colorize(text, color_code)
    "\033[#{color_code}m#{text}\033[0m"
  end
  def red(text); colorize(text, 31); end
  def green(text); colorize(text, 32); end
  def yellow(text); colorize(text, 33); end
  def blue(text); colorize(text, 34); end
  def magenta(text); colorize(text, 35); end

  def template_keep(source, goal)
    if ( ! File.file?(goal) )
      template source, goal
    else
      puts magenta("   unchanged  ") + goal
    end
  end
  def copy_keep(source, goal)
    if ( ! File.file?(goal) )
      template source, goal
    else
      puts magenta("   unchanged  ") + goal
    end
  end
  def create_file_keep(goal, content)
    if ( ! File.file?(goal) )
      create_file goal, "w" do content  end
    else
      puts magenta("   unchanged  ") + goal
    end
  end

end
